// Firebase
import { initializeApp } from "https://www.gstatic.com/firebasejs/11.3.1/firebase-app.js";
import { getDatabase, ref as dbRef, set, push, onValue, update, remove } from "https://www.gstatic.com/firebasejs/11.3.1/firebase-database.js";
import { getAuth, onAuthStateChanged } from "https://www.gstatic.com/firebasejs/11.3.1/firebase-auth.js";

// Firebase Config
const firebaseConfig = {
  apiKey: "AIzaSyDIMvnTxfnpDr72fIIexWcO2Jl0_fqM7tw",
  authDomain: "ever-together.firebaseapp.com",
  databaseURL: "https://ever-together-default-rtdb.europe-west1.firebasedatabase.app",
  projectId: "ever-together",
  storageBucket: "ever-together.appspot.com",
  messagingSenderId: "333503123875",
  appId: "1:333503123875:web:313a63c0d9f0093f05ca16"
};

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Firebase
const app = initializeApp(firebaseConfig);
const database = getDatabase(app);
const auth = getAuth();

// --- –ì–ª–æ–±–∞–ª—å–Ω—ã–µ —Å—Å—ã–ª–∫–∏ –Ω–∞ —ç–ª–µ–º–µ–Ω—Ç—ã –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ –¥–ª—è –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ –∑–∞–∫—Ä—ã—Ç–∏—è ---
const imageModalGlobalRef = document.getElementById('imageModal');
const optionsDropdownGlobalRef = document.getElementById('optionsDropdown');
const moreOptionsButtonGlobalRef = document.getElementById('moreOptionsButton');
// const closeModalButton = document.querySelector('.close-modal'); // –≠—Ç—É —Å—Ç—Ä–æ–∫—É —É–¥–∞–ª—è–µ–º, —Ç.–∫. –∫—Ä–µ—Å—Ç–∏–∫–∞ –Ω–µ—Ç

// –ü—Ä–æ–≤–µ—Ä–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
onAuthStateChanged(auth, (user) => {
  if (user) {
    console.log("–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω:", user.email);
    window.currentUser = user.email;
    loadImagesFromFirebase();
    updateBackgroundGradient();
  } else {
    console.log("–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω. –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É –≤—Ö–æ–¥–∞.");
    window.location.href = "entry.html";
  }
});

// –ó–∞–≥—Ä—É–∑–∫–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –∏–∑ Firebase
function loadImagesFromFirebase() {
  const imagesRef = dbRef(database, 'images');
  onValue(imagesRef, (snapshot) => {
    const data = snapshot.val();
    document.getElementById('leftColumn').innerHTML = '';
    document.getElementById('centerColumn').innerHTML = '';
    document.getElementById('rightColumn').innerHTML = '';
    if (data) {
      Object.keys(data).forEach((key) => {
        displayImage(data[key], key);
      });
    }
    updateBackgroundGradient();
  });
}

// –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å –ø–ª–∞–≤–Ω—ã–º –ø–æ—è–≤–ª–µ–Ω–∏–µ–º
function displayImage(imageData, imageId) {
  const targetColumn = document.getElementById(`${imageData.column}Column`);
  if (!targetColumn) return;

  // –°–æ–∑–¥–∞–µ–º –æ–±–µ—Ä—Ç–∫—É –¥–ª—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è (—Å–∫–µ–ª–µ—Ç–Ω—ã–π –ª–æ–∞–¥–µ—Ä)
  const imageWrapper = document.createElement('div');
  imageWrapper.classList.add('image-wrapper');
  imageWrapper.dataset.timestamp = imageData.timestamp;
  imageWrapper.dataset.views = imageData.views || 0;
  imageWrapper.dataset.id = imageId;
  imageWrapper.dataset.column = imageData.column;

  // –°–æ–∑–¥–∞–µ–º —Å–∞–º–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
  const img = document.createElement('img');
  img.src = imageData.url;
  img.classList.add('thumbnail');

  // –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ–±—ã—Ç–∏—è 'load' –¥–ª—è img
  img.onload = () => {
    img.classList.add('loaded'); // –î–æ–±–∞–≤–ª—è–µ–º –∫–ª–∞—Å—Å 'loaded' –ø–æ—Å–ª–µ –∑–∞–≥—Ä—É–∑–∫–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
  };

  // –ü–µ—Ä–µ—Ö–≤–∞—Ç—ã–≤–∞–µ–º –∫–ª–∏–∫ –Ω–∞ imageWrapper, –∞ –Ω–µ –Ω–∞ img,
  // —á—Ç–æ–±—ã —Å–æ–±—ã—Ç–∏–µ –æ—Ç–∫—Ä—ã—Ç–∏—è –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ —Å—Ä–∞–±–∞—Ç—ã–≤–∞–ª–æ —Ç–æ–ª—å–∫–æ –ø—Ä–∏ –∫–ª–∏–∫–µ –Ω–∞ –æ–±–µ—Ä—Ç–∫—É
  // –∏ –Ω–µ –∫–æ–Ω—Ñ–ª–∏–∫—Ç–æ–≤–∞–ª–æ —Å –ª–æ–≥–∏–∫–æ–π –∑–∞–∫—Ä—ã—Ç–∏—è –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞.
  imageWrapper.addEventListener('click', () => openModal(img));

  imageWrapper.appendChild(img); // –î–æ–±–∞–≤–ª—è–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –≤–Ω—É—Ç—Ä—å –æ–±–µ—Ä—Ç–∫–∏
  targetColumn.prepend(imageWrapper); // –î–æ–±–∞–≤–ª—è–µ–º –æ–±–µ—Ä—Ç–∫—É –≤ –∫–æ–ª–æ–Ω–∫—É
}

// –û—Ç–∫—Ä—ã—Ç–∏–µ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
function openModal(imgElement) {
  const modal = document.getElementById('imageModal');
  const modalImage = document.getElementById('modalImage');
  const imageInfo = document.getElementById('imageInfo');
  const moreOptionsBtn = document.getElementById('moreOptionsButton');
  const dropdown = document.getElementById('optionsDropdown');

  modal.style.display = 'block';
  dropdown.style.display = 'none';
  modalImage.src = imgElement.src;
  modalImage.dataset.id = imgElement.dataset.id;

  const imageId = imgElement.dataset.id;
  const column = imgElement.dataset.column;
  let currentViews = parseInt(imgElement.dataset.views) || 0;

  const userIsAretren = window.currentUser === 'aretren@gmail.com';
  const userIsChoisalery = window.currentUser === 'choisalery@gmail.com';
  let shouldIncrementView = false;

  if (column === 'left' && userIsAretren) {
    shouldIncrementView = true;
  } else if (column === 'right' && userIsChoisalery) {
    shouldIncrementView = true;
  } else if (column === 'center' && (userIsAretren || userIsChoisalery)) {
    shouldIncrementView = true;
  }

  if (shouldIncrementView) {
    currentViews += 1;
    // –û–±–Ω–æ–≤–ª—è–µ–º dataset –Ω–∞ —ç–ª–µ–º–µ–Ω—Ç–µ –æ–±–µ—Ä—Ç–∫–∏, —á—Ç–æ–±—ã –Ω–µ —Ç–µ—Ä—è—Ç—å –¥–∞–Ω–Ω—ã–µ –ø—Ä–∏ –ø–µ—Ä–µ—Ä–∏—Å–æ–≤–∫–µ
    // –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –≤–Ω—É—Ç—Ä–∏ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ –Ω–µ —è–≤–ª—è–µ—Ç—Å—è —Ç–µ–º –∂–µ —ç–ª–µ–º–µ–Ω—Ç–æ–º, —á—Ç–æ –≤ –∫–æ–ª–æ–Ω–∫–µ.
    // –ü–æ—ç—Ç–æ–º—É –Ω—É–∂–Ω–æ –æ–±–Ω–æ–≤–∏—Ç—å views –Ω–∞ –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–æ–º —ç–ª–µ–º–µ–Ω—Ç–µ –≤ –∫–æ–ª–æ–Ω–∫–µ, –µ—Å–ª–∏ –µ—Å—Ç—å –¥–æ—Å—Ç—É–ø,
    // –Ω–æ Firebase —Å–∞–º–∞ –æ–±–Ω–æ–≤–∏—Ç –¥–∞–Ω–Ω—ã–µ –∏ –ø–µ—Ä–µ—Ä–∏—Å—É–µ—Ç. –ó–¥–µ—Å—å –≥–ª–∞–≤–Ω–æ–µ - –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –≤ –±–∞–∑—É.
    const imageRefDB = dbRef(database, `images/${imageId}`);
    update(imageRefDB, { views: currentViews });
  }

  imageInfo.innerHTML = `üìÖ –ó–∞–≥—Ä—É–∂–µ–Ω–æ: ${new Date(imgElement.dataset.timestamp).toLocaleString()}<br>üëÅÔ∏èÔ∏è –ü—Ä–æ—Å–º–æ—Ç—Ä–æ–≤: ${currentViews}`;

  moreOptionsBtn.onclick = function(event) {
    event.stopPropagation();
    dropdown.style.display = dropdown.style.display === 'block' ? 'none' : 'block';
  };

  dropdown.onclick = function(event) {
    event.preventDefault();
    event.stopPropagation();

    const targetActionElement = event.target.closest('a[data-action]');
    if (!targetActionElement) return;

    const action = targetActionElement.dataset.action;
    const currentImageId = modalImage.dataset.id;

    if (action === 'delete') {
      remove(dbRef(database, `images/${currentImageId}`))
        .then(() => {
          console.log("–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —É–¥–∞–ª–µ–Ω–æ:", currentImageId);
          modal.style.display = 'none'; // –ó–∞–∫—Ä—ã–≤–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –ø–æ—Å–ª–µ —É–¥–∞–ª–µ–Ω–∏—è
          // –û—á–∏—â–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
          modalImage.src = '';
          modalImage.dataset.id = '';
          imageInfo.innerHTML = '';
        })
        .catch(error => console.error("–û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è:", error));
    } else if (action === 'move') {
      const newColumn = targetActionElement.dataset.column;
      update(dbRef(database, `images/${currentImageId}`), { column: newColumn })
        .then(() => {
          console.log(`–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ ${currentImageId} –ø–µ—Ä–µ–º–µ—â–µ–Ω–æ –≤ ${newColumn}`);
          modal.style.display = 'none'; // –ó–∞–∫—Ä—ã–≤–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –ø–æ—Å–ª–µ –ø–µ—Ä–µ–º–µ—â–µ–Ω–∏—è
          // –û—á–∏—â–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
          modalImage.src = '';
          modalImage.dataset.id = '';
          imageInfo.innerHTML = '';
        })
        .catch(error => console.error("–û—à–∏–±–∫–∞ –ø–µ—Ä–µ–º–µ—â–µ–Ω–∏—è:", error));
    }

    dropdown.style.display = 'none';
  };
}

function handleCloseInteractions(event) {
  // –ó–∞–∫—Ä—ã—Ç–∏–µ –¥—Ä–æ–ø–¥–∞—É–Ω–∞, –µ—Å–ª–∏ –∫–ª–∏–∫ –≤–Ω–µ –µ–≥–æ –∏ –∫–Ω–æ–ø–∫–∏
  if (optionsDropdownGlobalRef && optionsDropdownGlobalRef.style.display === 'block') {
    if (moreOptionsButtonGlobalRef &&
        !moreOptionsButtonGlobalRef.contains(event.target) &&
        !optionsDropdownGlobalRef.contains(event.target)) {
      optionsDropdownGlobalRef.style.display = 'none';
    }
  }

  // –ó–∞–∫—Ä—ã—Ç–∏–µ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ –ø—Ä–∏ –∫–ª–∏–∫–µ –Ω–∞ –ø–æ–¥–ª–æ–∂–∫—É (–ø—É—Å—Ç–æ–µ –º–µ—Å—Ç–æ)
  if (imageModalGlobalRef && imageModalGlobalRef.style.display === 'block' && event.target === imageModalGlobalRef) {
    imageModalGlobalRef.style.display = 'none';
    if (optionsDropdownGlobalRef) {
      optionsDropdownGlobalRef.style.display = 'none';
    }
    // –û—á–∏—â–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ –ø—Ä–∏ –∑–∞–∫—Ä—ã—Ç–∏–∏
    document.getElementById('modalImage').src = '';
    document.getElementById('modalImage').dataset.id = '';
    document.getElementById('imageInfo').innerHTML = '';
  }
}

window.addEventListener('click', handleCloseInteractions);
window.addEventListener('touchend', handleCloseInteractions);


// ----- –ù–ê–ß–ê–õ–û –ò–ó–ú–ï–ù–ï–ù–ò–ô –î–õ–Ø –ü–ê–ö–ï–¢–ù–û–ô –ó–ê–ì–†–£–ó–ö–ò -----
const fileInput = document.createElement('input');
fileInput.type = 'file';
fileInput.accept = 'image/*';
fileInput.multiple = true; // –†–∞–∑—Ä–µ—à–∞–µ–º –≤—ã–±–æ—Ä –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö —Ñ–∞–π–ª–æ–≤
fileInput.style.display = 'none';
document.body.appendChild(fileInput);

const uploadButtons = document.querySelectorAll('.upload-buttons button');
uploadButtons.forEach((button) => {
  button.addEventListener('click', () => {
    const column = button.id.replace('upload', '').toLowerCase();
    fileInput.dataset.column = column;
    fileInput.click();
  });
});

fileInput.addEventListener('change', async (event) => { // –î–µ–ª–∞–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã–º
  const files = event.target.files; // –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –≤—ã–±—Ä–∞–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤
  if (files.length > 0) {
    const selectedColumn = fileInput.dataset.column; // –ö–æ–ª–æ–Ω–∫–∞ –¥–ª—è –≤—Å–µ–π –ø–∞—á–∫–∏ —Ñ–∞–π–ª–æ–≤
    console.log(`–ù–∞—á–∞–ª–æ –ø–∞–∫–µ—Ç–Ω–æ–π –∑–∞–≥—Ä—É–∑–∫–∏ ${files.length} —Ñ–∞–π–ª–æ–≤ –≤ –∫–æ–ª–æ–Ω–∫—É ${selectedColumn}`);
    // –ú–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –∫–∞–∫–æ–π-—Ç–æ –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä –∑–∞–≥—Ä—É–∑–∫–∏ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∑–¥–µ—Å—å

    for (const file of files) { // –ü–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∫–∞–∂–¥—ã–π —Ñ–∞–π–ª
      console.log(`–ó–∞–≥—Ä—É–∑–∫–∞ —Ñ–∞–π–ª–∞: ${file.name}`);
      try {
        const formData = new FormData();
        formData.append("file", file);
        formData.append("upload_preset", "ever_together_upload");

        const cloudinaryResponse = await fetch("https://api.cloudinary.com/v1_1/dozbf3jis/image/upload", {
          method: "POST",
          body: formData
        });

        if (!cloudinaryResponse.ok) {
          let errorDetails = `HTTP –æ—à–∏–±–∫–∞ ${cloudinaryResponse.status}: ${cloudinaryResponse.statusText}`;
          try {
            // –ü—ã—Ç–∞–µ–º—Å—è –ø–æ–ª—É—á–∏—Ç—å –¥–µ—Ç–∞–ª–∏ –æ—à–∏–±–∫–∏ –æ—Ç Cloudinary
            const errorData = await cloudinaryResponse.json();
            if (errorData.error && errorData.error.message) {
              errorDetails += ` - ${errorData.error.message}`;
            }
          } catch (e) {
            // –ù–µ —É–¥–∞–ª–æ—Å—å —Ä–∞—Å–ø–∞—Ä—Å–∏—Ç—å JSON –æ—à–∏–±–∫–∏
          }
          console.error(`–û—à–∏–±–∫–∞ Cloudinary –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ ${file.name}: ${errorDetails}`);
          alert(`–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Ñ–∞–π–ª–∞ ${file.name} –≤ Cloudinary: ${errorDetails}. –°–º–æ—Ç—Ä–∏—Ç–µ –∫–æ–Ω—Å–æ–ª—å –¥–ª—è –¥–µ—Ç–∞–ª–µ–π.`);
          continue; // –ü–µ—Ä–µ—Ö–æ–¥–∏–º –∫ —Å–ª–µ–¥—É—é—â–µ–º—É —Ñ–∞–π–ª—É
        }

        const cloudinaryData = await cloudinaryResponse.json();

        if (cloudinaryData.secure_url) {
          const newImageRef = push(dbRef(database, 'images'));
          await set(newImageRef, {
            url: cloudinaryData.secure_url,
            timestamp: new Date().toISOString(),
            views: 0,
            column: selectedColumn
          });
          console.log(`–§–∞–π–ª ${file.name} —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω –∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω.`);
        } else {
          const errorMsg = cloudinaryData.error && cloudinaryData.error.message ? cloudinaryData.error.message : "URL –Ω–µ –ø–æ–ª—É—á–µ–Ω –æ—Ç Cloudinary.";
          console.error(`–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ ${file.name} –≤ Cloudinary: ${errorMsg}`, cloudinaryData);
          alert(`–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Ñ–∞–π–ª–∞ ${file.name} –≤ Cloudinary: ${errorMsg}.`);
        }
      } catch (error) { // –õ–æ–≤–∏–º —Å–µ—Ç–µ–≤—ã–µ –æ—à–∏–±–∫–∏ –∏–ª–∏ –¥—Ä—É–≥–∏–µ —Å–±–æ–∏ –≤ –ø—Ä–æ—Ü–µ—Å—Å–µ
        console.error(`–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Ñ–∞–π–ª–∞ ${file.name}:`, error);
        alert(`–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Ñ–∞–π–ª–∞ ${file.name}: ${error.message}.`);
      }
    }
    // –û—á–∏—â–∞–µ–º –∑–Ω–∞—á–µ–Ω–∏–µ –∏–Ω–ø—É—Ç–∞, —á—Ç–æ–±—ã –º–æ–∂–Ω–æ –±—ã–ª–æ –≤—ã–±—Ä–∞—Ç—å —Ç–µ –∂–µ —Ñ–∞–π–ª—ã —Å–Ω–æ–≤–∞
    event.target.value = null;
    console.log("–ü–∞–∫–µ—Ç–Ω–∞—è –∑–∞–≥—Ä—É–∑–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞ (–∏–ª–∏ –ø—Ä–µ–¥–ø—Ä–∏–Ω—è—Ç—ã –≤—Å–µ –ø–æ–ø—ã—Ç–∫–∏).");
    // –ú–æ–∂–Ω–æ —É–±—Ä–∞—Ç—å –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä –∑–∞–≥—Ä—É–∑–∫–∏ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∑–¥–µ—Å—å
  }
});
// ----- –ö–û–ù–ï–¶ –ò–ó–ú–ï–ù–ï–ù–ò–ô –î–õ–Ø –ü–ê–ö–ï–¢–ù–û–ô –ó–ê–ì–†–£–ó–ö–ò -----


function updateBackgroundGradient() {
  const leftViews = getColumnViews('left');
  const centerViews = getColumnViews('center');
  const rightViews = getColumnViews('right');
  const totalViews = leftViews + centerViews + rightViews;
  let balance = 0;
  if (totalViews > 0) {
    balance = (leftViews - rightViews) / totalViews;
  }
  const gradientPosition = 50 + (balance * 50);
  document.body.style.background = `linear-gradient(to right, #121212 ${gradientPosition}%, #2c3e50)`;
}

function getColumnViews(columnName) {
  // –¢–µ–ø–µ—Ä—å –∏—â–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –≤–Ω—É—Ç—Ä–∏ –æ–±–µ—Ä—Ç–æ–∫
  const images = document.querySelectorAll(`.image-column#${columnName}Column .image-wrapper`);
  return Array.from(images).reduce((acc, wrapper) => acc + (parseInt(wrapper.dataset.views) || 0), 0);
}
