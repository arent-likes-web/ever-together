// Firebase
import { initializeApp } from "https://www.gstatic.com/firebasejs/11.3.1/firebase-app.js";
import { getDatabase, ref as dbRef, set, push, onValue, update, remove } from "https://www.gstatic.com/firebasejs/11.3.1/firebase-database.js";
import { getAuth, onAuthStateChanged } from "https://www.gstatic.com/firebasejs/11.3.1/firebase-auth.js";

// Firebase Config
const firebaseConfig = {
  apiKey: "AIzaSyDIMvnTxfnpDr72fIIexWcO2Jl0_fqM7tw",
  authDomain: "ever-together.firebaseapp.com",
  databaseURL: "https://ever-together-default-rtdb.europe-west1.firebasedatabase.app",
  projectId: "ever-together",
  storageBucket: "ever-together.appspot.com",
  messagingSenderId: "333503123875",
  appId: "1:333503123875:web:313a63c0d9f0093f05ca16"
};

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Firebase
const app = initializeApp(firebaseConfig);
const database = getDatabase(app);
const auth = getAuth();

// --- –ì–ª–æ–±–∞–ª—å–Ω—ã–µ —Å—Å—ã–ª–∫–∏ –Ω–∞ —ç–ª–µ–º–µ–Ω—Ç—ã –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ –¥–ª—è –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ –∑–∞–∫—Ä—ã—Ç–∏—è ---
const imageModalGlobalRef = document.getElementById('imageModal');
const optionsDropdownGlobalRef = document.getElementById('optionsDropdown');
const moreOptionsButtonGlobalRef = document.getElementById('moreOptionsButton');


// –ü—Ä–æ–≤–µ—Ä–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
onAuthStateChanged(auth, (user) => {
  if (user) {
    console.log("–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω:", user.email);
    window.currentUser = user.email;
    loadImagesFromFirebase();
    updateBackgroundGradient();
  } else {
    console.log("–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω. –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É –≤—Ö–æ–¥–∞.");
    window.location.href = "entry.html";
  }
});

// –ó–∞–≥—Ä—É–∑–∫–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –∏–∑ Firebase
function loadImagesFromFirebase() {
  const imagesRef = dbRef(database, 'images');
  onValue(imagesRef, (snapshot) => {
    const data = snapshot.val();
    document.getElementById('leftColumn').innerHTML = '';
    document.getElementById('centerColumn').innerHTML = '';
    document.getElementById('rightColumn').innerHTML = '';
    if (data) {
      Object.keys(data).forEach((key) => {
        displayImage(data[key], key);
      });
    }
    updateBackgroundGradient();
  });
}

// –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
function displayImage(imageData, imageId) {
  const img = document.createElement('img');
  img.src = imageData.url;
  img.classList.add('thumbnail');
  img.dataset.timestamp = imageData.timestamp;
  img.dataset.views = imageData.views || 0;
  img.dataset.id = imageId;
  img.dataset.column = imageData.column;
  img.addEventListener('click', () => openModal(img));
  const targetColumn = document.getElementById(`${imageData.column}Column`);
  if (targetColumn) {
    targetColumn.prepend(img);
  }
}

// –û—Ç–∫—Ä—ã—Ç–∏–µ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
function openModal(imgElement) {
  const modal = document.getElementById('imageModal'); // imageModalGlobalRef
  const modalImage = document.getElementById('modalImage');
  const imageInfo = document.getElementById('imageInfo');
  const moreOptionsBtn = document.getElementById('moreOptionsButton'); // moreOptionsButtonGlobalRef
  const dropdown = document.getElementById('optionsDropdown'); // optionsDropdownGlobalRef

  modal.style.display = 'block';
  dropdown.style.display = 'none'; // –£–±–µ–¥–∏–º—Å—è, —á—Ç–æ –¥—Ä–æ–ø–¥–∞—É–Ω —Å–∫—Ä—ã—Ç –ø—Ä–∏ –æ—Ç–∫—Ä—ã—Ç–∏–∏ –º–æ–¥–∞–ª–∫–∏
  modalImage.src = imgElement.src;
  modalImage.dataset.id = imgElement.dataset.id; // –í–∞–∂–Ω–æ –¥–ª—è –¥–µ–π—Å—Ç–≤–∏–π

  const imageId = imgElement.dataset.id;
  const column = imgElement.dataset.column;
  let currentViews = parseInt(imgElement.dataset.views) || 0;

  const userIsAretren = window.currentUser === 'aretren@gmail.com';
  const userIsChoisalery = window.currentUser === 'choisalery@gmail.com';
  let shouldIncrementView = false;

  if (column === 'left' && userIsAretren) { 
    shouldIncrementView = true;
  } else if (column === 'right' && userIsChoisalery) { 
    shouldIncrementView = true;
  } else if (column === 'center' && (userIsAretren || userIsChoisalery)) { 
    shouldIncrementView = true;
  }

  if (shouldIncrementView) {
    currentViews += 1;
    imgElement.dataset.views = currentViews;
    const imageRefDB = dbRef(database, `images/${imageId}`);
    update(imageRefDB, { views: currentViews });
  }

  imageInfo.innerHTML = `üìÖ –ó–∞–≥—Ä—É–∂–µ–Ω–æ: ${new Date(imgElement.dataset.timestamp).toLocaleString()}<br>üëÅÔ∏è –ü—Ä–æ—Å–º–æ—Ç—Ä–æ–≤: ${currentViews}`;

  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∫–Ω–æ–ø–∫–∏ "..."
  moreOptionsBtn.onclick = function(event) {
    event.stopPropagation(); // –ü—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–∞–µ–º –∑–∞–∫—Ä—ã—Ç–∏–µ –º–æ–¥–∞–ª–∫–∏ –∏–ª–∏ –¥—Ä–æ–ø–¥–∞—É–Ω–∞ –∏–∑-–∑–∞ –≤—Å–ø–ª—ã—Ç–∏—è
    dropdown.style.display = dropdown.style.display === 'block' ? 'none' : 'block';
  };

  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –¥–µ–π—Å—Ç–≤–∏–π –≤ –≤—ã–ø–∞–¥–∞—é—â–µ–º —Å–ø–∏—Å–∫–µ (–¥–µ–ª–µ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ)
  dropdown.onclick = function(event) {
    event.preventDefault();
    event.stopPropagation();
    
    const targetActionElement = event.target.closest('a[data-action]');
    if (!targetActionElement) return;

    const action = targetActionElement.dataset.action;
    const currentImageId = modalImage.dataset.id; // –ë–µ—Ä–µ–º ID –∏–∑ –æ—Ç–∫—Ä—ã—Ç–æ–≥–æ –≤ –º–æ–¥–∞–ª–∫–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è

    if (action === 'delete') {
      remove(dbRef(database, `images/${currentImageId}`))
        .then(() => console.log("–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —É–¥–∞–ª–µ–Ω–æ:", currentImageId))
        .catch(error => console.error("–û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è:", error));
    } else if (action === 'move') {
      const newColumn = targetActionElement.dataset.column;
      update(dbRef(database, `images/${currentImageId}`), { column: newColumn })
        .then(() => console.log(`–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ ${currentImageId} –ø–µ—Ä–µ–º–µ—â–µ–Ω–æ –≤ ${newColumn}`))
        .catch(error => console.error("–û—à–∏–±–∫–∞ –ø–µ—Ä–µ–º–µ—â–µ–Ω–∏—è:", error));
    }

    dropdown.style.display = 'none';
    modal.style.display = 'none'; // –ó–∞–∫—Ä—ã–≤–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –ø–æ—Å–ª–µ –¥–µ–π—Å—Ç–≤–∏—è
  };
}


// --- –û–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –∑–∞–∫—Ä—ã—Ç–∏—è –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ –∏ –≤—ã–ø–∞–¥–∞—é—â–µ–≥–æ —Å–ø–∏—Å–∫–∞ ---
function handleCloseInteractions(event) {
    // –ó–∞–∫—Ä—ã—Ç—å –≤—ã–ø–∞–¥–∞—é—â–∏–π —Å–ø–∏—Å–æ–∫, –µ—Å–ª–∏ –∫–ª–∏–∫ –≤–Ω–µ –µ–≥–æ –∏ –∫–Ω–æ–ø–∫–∏ "..."
    if (optionsDropdownGlobalRef && optionsDropdownGlobalRef.style.display === 'block') {
        if (moreOptionsButtonGlobalRef && 
            !moreOptionsButtonGlobalRef.contains(event.target) && 
            !optionsDropdownGlobalRef.contains(event.target)) {
            optionsDropdownGlobalRef.style.display = 'none';
        }
    }

    // –ó–∞–∫—Ä—ã—Ç—å –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ, –µ—Å–ª–∏ –∫–ª–∏–∫ –ø–æ —Ñ–æ–Ω—É (backdrop)
    if (imageModalGlobalRef && imageModalGlobalRef.style.display === 'block' && event.target === imageModalGlobalRef) {
        imageModalGlobalRef.style.display = 'none';
        if (optionsDropdownGlobalRef) { // –¢–∞–∫–∂–µ —Å–∫—Ä—ã—Ç—å –≤—ã–ø–∞–¥–∞—é—â–∏–π —Å–ø–∏—Å–æ–∫
            optionsDropdownGlobalRef.style.display = 'none';
        }
    }
}

window.addEventListener('click', handleCloseInteractions);
window.addEventListener('touchend', handleCloseInteractions); // –¢–∞–∫–∂–µ –¥–ª—è —Å–µ–Ω—Å–æ—Ä–Ω—ã—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤


// –õ–æ–≥–∏–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∞–π–ª–æ–≤ (–æ—Å—Ç–∞–µ—Ç—Å—è –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π)
const fileInput = document.createElement('input');
fileInput.type = 'file';
fileInput.accept = 'image/*';
fileInput.style.display = 'none';
document.body.appendChild(fileInput);

const uploadButtons = document.querySelectorAll('.upload-buttons button');
uploadButtons.forEach((button) => {
  button.addEventListener('click', () => {
    const column = button.id.replace('upload', '').toLowerCase();
    fileInput.dataset.column = column;
    fileInput.click();
  });
});

fileInput.addEventListener('change', (event) => {
  const file = event.target.files[0];
  if (file) {
    const formData = new FormData();
    formData.append("file", file);
    formData.append("upload_preset", "ever_together_upload");

    fetch("https://api.cloudinary.com/v1_1/dozbf3jis/image/upload", {
      method: "POST",
      body: formData
    })
    .then((response) => response.json())
    .then((data) => {
      if (data.secure_url) {
        const newImageRef = push(dbRef(database, 'images'));
        set(newImageRef, {
          url: data.secure_url,
          timestamp: new Date().toISOString(),
          views: 0,
          column: fileInput.dataset.column
        });
      } else {
        console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –≤ Cloudinary:", data);
      }
    })
    .catch((error) => console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è:", error));
  }
});

function updateBackgroundGradient() {
  const leftViews = getColumnViews('left');
  const centerViews = getColumnViews('center');
  const rightViews = getColumnViews('right');
  const totalViews = leftViews + centerViews + rightViews;
  let balance = 0;
  if (totalViews > 0) {
    balance = (leftViews - rightViews) / totalViews;
  }
  const gradientPosition = 50 + (balance * 50);
  document.body.style.background = `linear-gradient(to right, #121212 ${gradientPosition}%, #2c3e50)`;
}

function getColumnViews(columnName) {
  const images = document.querySelectorAll(`.image-column#${columnName}Column .thumbnail`);
  return Array.from(images).reduce((acc, img) => acc + (parseInt(img.dataset.views) || 0), 0);
}
